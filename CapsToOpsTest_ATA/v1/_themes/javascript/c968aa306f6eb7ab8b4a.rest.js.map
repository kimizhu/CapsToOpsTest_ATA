{"version":3,"sources":["webpack:///c968aa306f6eb7ab8b4a.rest.js","webpack:///webpack/bootstrap c968aa306f6eb7ab8b4a?787f**","webpack:///./rest.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","parentJsonpFunction","window","chunkIds","moreModules","chunkId","i","callbacks","length","installedChunks","push","apply","shift",8,"e","callback","undefined","head","document","getElementsByTagName","script","createElement","type","charset","async","src","p","9","appendChild","m","c","getPublicPath","scriptEls","thisScriptEl","scriptPath","substr","lastIndexOf","$","__WEBPACK_AMD_REQUIRE_ARRAY__","_","Q","Vue","SwaggerApi","SwaggerRegistry","RestTemplate","SwaggerRunner","restModel","config","util","docsToc","docsBread","renderRestApiTocOldDesign","renderConceptualBreadcrumbAsync","each","registerSwaggerApi","this","data","buildExample","definition","example","examples","isPlainObject","isString","isUndefined","JSON","stringify","all","loadLibrary","paths","ajv","resolveAll","loadTemplates","then","operationId","replace","swaggerUrl","proxyUrl","register","api","getApi","isBuilt","isValid","operation","getOperationById","parameterModels","map","parameters","param","buildParameterModel","definitions","restFormId","uniqueId","attr","responseSamples","values","responses","el","template","proxy_url","swagger_url","operation_id","sample_response","err","console","log"],"mappings":"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","file":"c968aa306f6eb7ab8b4a.rest.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId])\n/******/ \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n/******/ \t\twhile(callbacks.length)\n/******/ \t\t\tcallbacks.shift().call(null, __webpack_require__);\n/******/\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \t// Array means \"loading\", array contains callbacks\n/******/ \tvar installedChunks = {\n/******/ \t\t8:0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] === 0)\n/******/ \t\t\treturn callback.call(null, __webpack_require__);\n/******/\n/******/ \t\t// an array means \"currently loading\".\n/******/ \t\tif(installedChunks[chunkId] !== undefined) {\n/******/ \t\t\tinstalledChunks[chunkId].push(callback);\n/******/ \t\t} else {\n/******/ \t\t\t// start chunk loading\n/******/ \t\t\tinstalledChunks[chunkId] = [callback];\n/******/ \t\t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\t\tvar script = document.createElement('script');\n/******/ \t\t\tscript.type = 'text/javascript';\n/******/ \t\t\tscript.charset = 'utf-8';\n/******/ \t\t\tscript.async = true;\n/******/\n/******/ \t\t\tscript.src = __webpack_require__.p + \"\" + {\"9\":\"70f723ab3092ba8596f2\"}[chunkId] + \".js\";\n/******/ \t\t\thead.appendChild(script);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// DOCS uses docpacker to finalize the theme path. In order to deal with the dynamic path issue,\n\t// the function provides the entry script path as the module path for the webpack loading system.\n\tfunction getPublicPath() {\n\t    'use strict';\n\t    var scriptEls = document.getElementsByTagName('script');\n\t    var thisScriptEl = scriptEls[scriptEls.length - 1];\n\t    var scriptPath = thisScriptEl.src;\n\t    return scriptPath.substr(0, scriptPath.lastIndexOf('/') + 1);\n\t}\n\t__webpack_require__.p = getPublicPath();\n\t\n\t/**\n\t * This js is entry for integrating try-it feature on Rest apis. It will:\n\t *  1. find all swagger urls and try to resolve these urls.\n\t *  2. load vue templates for parameter form/request/response.\n\t */\n\t__webpack_require__.e/* require */(9, function(__webpack_require__) { /* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(11), __webpack_require__(18), __webpack_require__(37), __webpack_require__(38), __webpack_require__(41), __webpack_require__(42), __webpack_require__(43), __webpack_require__(44), __webpack_require__(26), __webpack_require__(21)]; (function(_, Q, Vue, SwaggerApi, SwaggerRegistry, RestTemplate, SwaggerRunner, restModel, config, util) {\n\t    \"use strict\";\n\t\n\t    var docsToc = __webpack_require__(12);\n\t    var docsBread = __webpack_require__(17);\n\t    docsToc.renderRestApiTocOldDesign();\n\t    docsBread.renderConceptualBreadcrumbAsync();\n\t\n\t    $(\"div.api-example[data-api-swagger-url]\").each(function() {\n\t        SwaggerRegistry.registerSwaggerApi($(this).data('api-swagger-url'));\n\t    });\n\t\n\t    var buildExample = function(definition) {\n\t        var example;\n\t        if (definition.examples && _.isPlainObject(definition.examples) && definition.examples['application/json']) {\n\t            example =  definition.examples['application/json'];\n\t        } else if (!definition.example) {\n\t            example = definition.examples;\n\t        }\n\t        return (_.isString(example) || _.isUndefined(example))? example : JSON.stringify(example, null, 4);\n\t    };\n\t\n\t    Q.all([util.loadLibrary(config.paths.ajv), SwaggerRegistry.resolveAll(), RestTemplate.loadTemplates()]).then(function() {\n\t        $(\"div.api-example[data-api-operation-id]\").each(function() {\n\t            var operationId = $(this).data('api-operation-id').replace(/\\s+/g, '_');\n\t            var swaggerUrl = $(this).data('api-swagger-url');\n\t            var proxyUrl = $(this).data('api-example-endpoint');\n\t            // hard-coded runner for graph api, need to be-refactored later\n\t            SwaggerRunner.register(proxyUrl, \"url\", \"Bearer {token:https://graph.windows.net/}\");\n\t\n\t            var api = SwaggerRegistry.getApi(swaggerUrl);\n\t            if (api && api.isBuilt && api.isValid) {\n\t                var operation = api.getOperationById(operationId);\n\t                if (operation) {\n\t                    var parameterModels = _.map(operation.parameters, function(param) {\n\t                        return restModel.buildParameterModel(param, api.definitions);\n\t                    });\n\t                    var restFormId = operationId + restModel.uniqueId();\n\t                    $(this).attr('id', restFormId);\n\t\n\t                    var responseSamples = _.map(_.values(operation.responses), buildExample);\n\t                    var vue = new Vue({\n\t                        el: '#' + restFormId,\n\t                        template: '<rest-api-form :parameters=\"parameters\" :operation_id=\"operation_id\" :swagger_url=\"swagger_url\" :proxy_url=\"proxy_url\" :sample_response=\"sample_response\"></rest-api-form>',\n\t                        data: {\n\t                            \"proxy_url\" : proxyUrl,\n\t                            \"swagger_url\" : swaggerUrl,\n\t                            \"parameters\": parameterModels,\n\t                            \"operation_id\": operationId,\n\t                            \"sample_response\" : responseSamples.length ? responseSamples[0] : ''\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t        });\n\t    }).catch(function(err) {\n\t        console.log(err);\n\t    });\n\t}.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));\n\t/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(1)))});\n\t\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** c968aa306f6eb7ab8b4a.rest.js\n **/"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t8:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + {\"9\":\"70f723ab3092ba8596f2\"}[chunkId] + \".js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c968aa306f6eb7ab8b4a\n **/","// DOCS uses docpacker to finalize the theme path. In order to deal with the dynamic path issue,\n// the function provides the entry script path as the module path for the webpack loading system.\nfunction getPublicPath() {\n    'use strict';\n    var scriptEls = document.getElementsByTagName('script');\n    var thisScriptEl = scriptEls[scriptEls.length - 1];\n    var scriptPath = thisScriptEl.src;\n    return scriptPath.substr(0, scriptPath.lastIndexOf('/') + 1);\n}\n__webpack_public_path__ = getPublicPath();\n\n/**\n * This js is entry for integrating try-it feature on Rest apis. It will:\n *  1. find all swagger urls and try to resolve these urls.\n *  2. load vue templates for parameter form/request/response.\n */\nrequire(['lodash', 'q', 'vue', 'swagger-api', 'swagger-registry', 'rest.tpl', 'swagger-runner', 'rest.model', 'docs.config', 'util'],\n    function(_, Q, Vue, SwaggerApi, SwaggerRegistry, RestTemplate, SwaggerRunner, restModel, config, util) {\n    \"use strict\";\n\n    var docsToc = require(\"docs.toc\");\n    var docsBread = require(\"docs.breadcrumb\");\n    docsToc.renderRestApiTocOldDesign();\n    docsBread.renderConceptualBreadcrumbAsync();\n\n    $(\"div.api-example[data-api-swagger-url]\").each(function() {\n        SwaggerRegistry.registerSwaggerApi($(this).data('api-swagger-url'));\n    });\n\n    var buildExample = function(definition) {\n        var example;\n        if (definition.examples && _.isPlainObject(definition.examples) && definition.examples['application/json']) {\n            example =  definition.examples['application/json'];\n        } else if (!definition.example) {\n            example = definition.examples;\n        }\n        return (_.isString(example) || _.isUndefined(example))? example : JSON.stringify(example, null, 4);\n    };\n\n    Q.all([util.loadLibrary(config.paths.ajv), SwaggerRegistry.resolveAll(), RestTemplate.loadTemplates()]).then(function() {\n        $(\"div.api-example[data-api-operation-id]\").each(function() {\n            var operationId = $(this).data('api-operation-id').replace(/\\s+/g, '_');\n            var swaggerUrl = $(this).data('api-swagger-url');\n            var proxyUrl = $(this).data('api-example-endpoint');\n            // hard-coded runner for graph api, need to be-refactored later\n            SwaggerRunner.register(proxyUrl, \"url\", \"Bearer {token:https://graph.windows.net/}\");\n\n            var api = SwaggerRegistry.getApi(swaggerUrl);\n            if (api && api.isBuilt && api.isValid) {\n                var operation = api.getOperationById(operationId);\n                if (operation) {\n                    var parameterModels = _.map(operation.parameters, function(param) {\n                        return restModel.buildParameterModel(param, api.definitions);\n                    });\n                    var restFormId = operationId + restModel.uniqueId();\n                    $(this).attr('id', restFormId);\n\n                    var responseSamples = _.map(_.values(operation.responses), buildExample);\n                    var vue = new Vue({\n                        el: '#' + restFormId,\n                        template: '<rest-api-form :parameters=\"parameters\" :operation_id=\"operation_id\" :swagger_url=\"swagger_url\" :proxy_url=\"proxy_url\" :sample_response=\"sample_response\"></rest-api-form>',\n                        data: {\n                            \"proxy_url\" : proxyUrl,\n                            \"swagger_url\" : swaggerUrl,\n                            \"parameters\": parameterModels,\n                            \"operation_id\": operationId,\n                            \"sample_response\" : responseSamples.length ? responseSamples[0] : ''\n                        }\n                    });\n                }\n            }\n        });\n    }).catch(function(err) {\n        console.log(err);\n    });\n});\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./rest.js\n ** module id = 0\n ** module chunks = 8\n **/"],"sourceRoot":""}